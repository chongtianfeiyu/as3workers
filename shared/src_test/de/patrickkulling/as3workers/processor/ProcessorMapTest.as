/* * Copyright (c) 2012 Patrick Kulling * * Permission is hereby granted, free of charge, to any person obtaining a copy * of this software and associated documentation files (the "Software"), to deal * in the Software without restriction, including without limitation the rights * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell * copies of the Software, and to permit persons to whom the Software is * furnished to do so, subject to the following conditions: * * The above copyright notice and this permission notice shall be included in * all copies or substantial portions of the Software. * * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN * THE SOFTWARE. */package de.patrickkulling.as3workers.processor{	import org.flexunit.asserts.assertEquals;	import org.flexunit.asserts.assertNotNull;	import org.flexunit.asserts.assertTrue;	public class ProcessorMapTest	{		private var processorMap:ProcessorMap;		[Before]		public function before()		{			processorMap = new ProcessorMap();		}		[Test]		public function test_getProcessor_should_return_Empty_Processor_if_not_mapped():void		{			var processor:Processor = processorMap.getProcessor(0);			assertNotNull(processor);			assertTrue(processor is EmptyProcessor);		}		[Test]		public function test_map_should_create_mapping():void		{			var testProcessor:TestProcessor = new TestProcessor();			processorMap.map(0, testProcessor);			var processor:Processor = processorMap.getProcessor(0);			assertEquals(processor, testProcessor);		}		[Test]		public function test_map_should_override_previous_mapping():void		{			var testProcessor:TestProcessor = new TestProcessor();			processorMap.map(0, testProcessor);			processorMap.map(0, new TestProcessor());			var processor:Processor = processorMap.getProcessor(0);			assertTrue(processor != testProcessor);		}	}}import de.patrickkulling.as3workers.processor.Processor;import flash.utils.ByteArray;class TestProcessor implements Processor{	public function process(message:ByteArray):void	{	}}